{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoItem/index.js","TodoSearch/index.js","CreateTodoButton/index.js","TodoList/index.js","Modal/index.js","TodoForm/index.js","App/AppUi.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","item","setItem","loading","setLoading","empty","setEmpty","error","setError","useEffect","setTimeout","console","log","parsedTodos","localStorageItem","localStorage","getItem","JSON","parse","length","stringify","err","saveItem","newItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","totalTodos","searchTodos","todoText","text","toLocaleLowerCase","searchText","includes","Provider","value","completeTodos","todoIndex","findIndex","newTodos","deleteTodos","splice","addTodo","push","children","TodoCounter","total","Fragment","Consumer","className","TodoItem","onClick","onComplete","onDelete","TodoSearch","useContext","placeholder","onChange","event","target","CreateTodoButton","prevState","TodoList","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onCancel","onSubmit","preventDefault","type","AppUi","map","App","render","StrictMode"],"mappings":"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","file":"static/js/main.23aa643b.chunk.js","sourcesContent":["import React from 'react';\nimport { useLocalStorage } from './useLocalStorage';\n\nconst TodoContext = React.createContext();\n// const { Consumer, Provider} = React.createContext();\n\n\nexport default function TodoProvider(props) {\n\n  const { item: todos, saveItem: saveTodos, loading, error, empty } = useLocalStorage('TODOS_V1', []);\n  // const [ nombre, saveNombre ] = useLocalStorage('nombre', 'Tavo');\n\n  const [ searchValue, setSearchValue ] = React.useState('');\n  const [openModal, setOpenModal] = React.useState(false);\n  const completedTodos = todos.filter(todo => todo.completed).length;\n  const totalTodos = todos.length;\n\n  let searchTodos = [];\n  console.log('PADRE', searchValue);\n  if(!searchValue.length >= 1) {\n    searchTodos = todos;\n  } else {\n    searchTodos = todos.filter(todo => {\n      const todoText = todo.text.toLocaleLowerCase();\n      const searchText = searchValue.toLocaleLowerCase();\n      return todoText.includes(searchText);\n    })\n  }\n\n  const  completeTodos = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text == text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = !newTodos[todoIndex].completed;\n    saveTodos(newTodos);\n  }\n  const  addTodo = (text) => {\n    const newTodos = [...todos];\n    newTodos.push({\n      completed: false,\n      text: text\n    });\n    saveTodos(newTodos);\n  }\n  const  deleteTodos = (text) => {\n    console.log('dele', text)\n    const todoIndex = todos.findIndex(todo => todo.text == text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n\n  }\n\n    return (\n    <TodoContext.Provider value={{\n        loading,\n        error,\n        totalTodos,\n        completedTodos,\n        searchValue,\n        setSearchValue,\n        searchTodos,\n        completeTodos,\n        deleteTodos,\n        setOpenModal,\n        openModal,\n        addTodo,\n        empty\n    }}>\n        {props.children}\n    </TodoContext.Provider>\n    )\n}\n\nexport { TodoContext, TodoProvider }\n\n{/* <TodoContext.Consumer></TodoContext.Consumer> */}\n","import React from 'react'\n\n// hook del localStorage\nfunction useLocalStorage(itemName, initialValue) {\n    const [ item, setItem ] = React.useState(initialValue);\n    const [loading, setLoading] = React.useState(true);\n    const [empty, setEmpty] = React.useState(false);\n    const [error, setError] = React.useState(false);\n  \n    React.useEffect(() => {\n      setTimeout(() => {\n        try {\n          console.log('entra a setTime')\n          let localStorageItem =  localStorage.getItem(itemName);\n          let parsedTodos;\n        \n          if(!localStorageItem) {\n            localStorage.setItem(itemName, JSON.stringify(initialValue) ); \n            parsedTodos = [];\n            setEmpty(true);\n          } else {\n            parsedTodos = JSON.parse(localStorageItem);\n            if(parsedTodos && !parsedTodos.length) {\n              setEmpty(true);\n              \n            }\n          }\n          setItem(parsedTodos);\n          setLoading(false)\n        } catch(err) {\n          setError(err);\n        }\n  \n      }, 1000)\n    },[]);\n  \n    const saveItem = (newItem) => {\n      try {\n        localStorage.setItem(itemName, JSON.stringify(newItem) ); \n        setItem(newItem);\n        \n      } catch (error) {\n        setError(error);\n        \n      }\n  \n    }\n    return {\n      item, \n      saveItem,\n      loading,\n      error,\n      empty\n    };\n}\n\nexport { useLocalStorage };\n  ","import React from 'react';\nimport './TodoCounter.css';\nimport { TodoContext } from '../TodoContext';\n\n\nfunction TodoCounter({ total, completed }) {\n\n  // const { total, completed } = props;\n    return (\n      <React.Fragment>\n        <TodoContext.Consumer>\n          {({completedTodos, totalTodos}) => (\n            <h2 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} TODOs</h2>\n          )}\n        </TodoContext.Consumer>\n         {/* <div></div> */}\n\n      </React.Fragment>\n\n\n    );\n  }\n\nexport { TodoCounter };\n","import React from 'react';\nimport './TodoItem.css'\n\nfunction TodoItem(props) {\n    // const onComplete = () => {\n    //   alert('Completaste el todo' + props.text)\n    // }\n    // const onDelete = () => {\n    //   alert('Eliminaste el todo' + props.text)\n    // }\n\n    return (\n      <li className=\"TodoItem\">\n        <span className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\n        onClick={props.onComplete}\n        >\n          âˆš\n        </span>\n        <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n          {props.text}\n        </p>\n       \n        <span className=\"Icon Icon-delete\"  onClick={props.onDelete} >\n          X\n        </span>\n      </li>\n    );\n  }\nexport { TodoItem };\n\n","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoSearch.css';\n\nfunction TodoSearch() {\n\n  // const [searchValue, setSearchValue] = React.useState('');\n  const {            \n    searchValue,\n    setSearchValue,\n  } = React.useContext(TodoContext);\n\n  const onSearchValueChange = (event) => {\n    console.log(event.target.value)\n    setSearchValue(event.target.value);\n  }\n\n  return (\n    <input \n      className=\"TodoSearch\" \n      placeholder=\"Cebolla\"\n      value={searchValue}\n      onChange={onSearchValueChange}\n    />\n   \n  );\n}\n\nexport { TodoSearch };\n ","import React from 'react';\nimport './CreateTodoButton.css';\n\nfunction CreateTodoButton(props) {\n\n  const onClickButton = (msg) => {\n    props.setOpenModal(prevState => !prevState);\n\n  }\n    return (\n      <button className=\"CreateTodoButton\"\n        onClick={() => onClickButton('h ola mundo12')}\n      >+</button>\n    );\n  }\n\nexport { CreateTodoButton };\n\n","import React from 'react';\nimport './TodoList.css';\n\nfunction TodoList(props) {\n    return (\n      <section>\n        <ul>\n          {props.children}\n        </ul>\n      </section>\n    );\n  }\n  \nexport { TodoList };\n\n","import ReactDOM from 'react-dom';\n\nimport React from 'react';\nimport './Modal.css'\n\nexport default function Modal({ children }) {\n    return ReactDOM.createPortal(\n        <div className=\"ModalBackground\">\n            {children}\n        </div>,\n        document.getElementById('modal')\n    )\n}\n\nexport { Modal };\n\n","import React from 'react'\nimport { TodoContext } from '../TodoContext';\n\nexport default function TodoForm() {\n    const [ newTodoValue , setNewTodoValue ] = React.useState('');\n     const {\n        addTodo,\n        setOpenModal\n    } = React.useContext(TodoContext);\n\n    const onCancel = ( )=> {\n        // TODO\n    setOpenModal(prevState => !prevState);\n\n    } \n    const onChange = (event) => {\n        setNewTodoValue(event.target.value);\n    }\n    const onSubmit = (event) => {\n        event.preventDefault();\n        addTodo(newTodoValue);\n        onCancel();\n    }\n    return (\n        <form onSubmit={onSubmit}> \n            <label>...</label>\n            <textarea \n                value={newTodoValue}\n                onChange={onChange}\n                placeholder=\"Ejemplo de TODOs\"/>\n\n            <div>\n                <button\n                type=\"button\"\n                    onClick={onCancel}>\n                    Cancelar\n                </button>\n                <button \n                    type=\"submit\">\n                    AÃ±adir\n                </button>\n            </div>\n        </form>\n    )\n}\n\nexport { TodoForm };\n","\nimport React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport { TodoCounter } from '../TodoCounter';\nimport { TodoItem } from '../TodoItem';\nimport { TodoSearch } from '../TodoSearch';\nimport { CreateTodoButton } from '../CreateTodoButton';\nimport { TodoList } from '../TodoList';\nimport { Modal } from '../Modal';\nimport { TodoForm } from '../TodoForm';\n\nexport default function AppUi({\n}) {\n\n   const {            \n    error,\n    loading, \n    searchTodos,\n    completeTodos,\n    deleteTodos,\n    openModal,\n    setOpenModal,\n    empty\n    } = React.useContext(TodoContext);\n\n    return (\n        <React.Fragment>\n            <TodoCounter />\n            <TodoSearch  />\n\n            {/* <TodoContext.Consumer>\n                {({ \n       \n                }) => ( */}\n                <TodoList>\n                    {error && <p>Ocurrio un error</p>}\n                    {loading && <p>Estamos cargando</p>}\n                    {empty && <p>No tienes TODOs</p>}\n                    {!loading && !searchTodos.length && <p>Crea tu primer TODO</p>}\n\n                    {searchTodos.map(todo => (\n                        <TodoItem\n                        key={todo.text}\n                        text={todo.text}\n                        completed={todo.completed}\n                        onComplete={() => completeTodos(todo.text)}\n                        onDelete={() => deleteTodos(todo.text)}\n                        />\n                    ))}\n                </TodoList>\n                {/* )} */}\n            {/* </TodoContext.Consumer> */}\n\n            {openModal && (\n                <Modal>\n                        <TodoForm/>\n                </Modal>  \n            )}\n\n            <CreateTodoButton \n             setOpenModal={setOpenModal}\n             />\n      </React.Fragment>\n    )\n}\n\nexport { AppUi };\n","\nimport './App.css';\nimport React from 'react';\nimport { AppUi } from './AppUi';\nimport { TodoProvider } from '../TodoContext';\n\n\nconst defaultTodos = [\n  {\n    text: 'Cortar cebolla', completed: true \n  },\n  {\n    text: 'Otro curso about react', completed: false \n  },\n  {\n    text: 'Otro curso about react mÃ¡s avanzado', completed: true \n  },\n]\n// localStorage.setItem('TODOS_V1',JSON.stringify(defaultTodos) );\n\n\nfunction App() {\n  \n  return ([\n    <TodoProvider>\n      <AppUi />\n    </TodoProvider>\n  ]\n  );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// const e = React.createElement\n\n// function App() {\n//     <h1 id=\"title\">\n//       hellor wor\n//     </h1>\n//     // Este h1 es lo mismo que esta aca abajo\n//   return (\n//     React.createElement('h1', { id: 'title'}, 'Hello react')\n//   );\n// }\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App saludo=\"Hola tavo\"/> */}\n    {/* <App>\n      Holaaa oli\n    </App> */}\n  <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nReactDOM.createPortal(\n  <App/>,\n  document.getElementById('modal')\n)\n\n\n"],"sourceRoot":""}